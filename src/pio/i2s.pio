; Source: https://github.com/earlephilhower/arduino-pico/blob/07500e89dbfc8a8d6bcdf2dac7830e37a9f583e1/libraries/I2S/src/pio_i2s.pio

.program pio_i2s_in
.side_set 2   ; 0 = bclk, 1=wclk

; The C code should place (number of bits/sample - 2) in Y and
; also update the SHIFTCTRL to be 24 or 32 as appropriate

.wrap_target
;                           +----- WCLK
;                           |+---- BCLK
    mov x, y         side 0b00
left:
    in pins, 1       side 0b01
    jmp x--, left    side 0b00
    in pins, 1       side 0b11 ; Last bit of left has WCLK change per I2S spec

    mov x, y         side 0b10
right:
    in pins, 1       side 0b11
    jmp x--, right   side 0b10
    in pins, 1       side 0b01 ; Last bit of right also has WCLK change
.wrap

% c-sdk {

static inline void pio_i2s_in_program_init(PIO pio, uint sm, uint offset, uint data_pin, uint clock_pin_base, uint bits) {
    pio_gpio_init(pio, data_pin);
    pio_gpio_init(pio, clock_pin_base);
    pio_gpio_init(pio, clock_pin_base + 1);

    pio_sm_config sm_config = pio_i2s_in_program_get_default_config(offset);

    sm_config_set_in_pins(&sm_config, data_pin);
    sm_config_set_sideset_pins(&sm_config, clock_pin_base);
    sm_config_set_in_shift(&sm_config, false, true, (bits <= 16) ? 2 * bits : bits);
    sm_config_set_fifo_join(&sm_config, PIO_FIFO_JOIN_RX);

    pio_sm_init(pio, sm, offset, &sm_config);

    uint pin_mask = 3u << clock_pin_base;
    pio_sm_set_pindirs_with_mask(pio, sm, pin_mask, pin_mask);
    pio_sm_set_pins(pio, sm, 0); // clear pins

    pio_sm_exec(pio, sm, pio_encode_set(pio_y, bits - 2));
}
%}
